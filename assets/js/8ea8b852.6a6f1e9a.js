"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[2978],{4243:(n,e,a)=>{a.r(e),a.d(e,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>c});var t=a(4848),d=a(8453);const r={author:"facsert",pubDatetime:new Date("2024-02-21T20:34:43.000Z"),title:"Python pandas",slug:"Python pandas",featured:!1,draft:!1,tags:["Python","pandas"],description:"Python pandas \u6a21\u5757"},s=void 0,i={id:"Python/python-pandas",title:"Python pandas",description:"Python pandas \u6a21\u5757",source:"@site/docs/Python/python-pandas.md",sourceDirName:"Python",slug:"/Python/Python pandas",permalink:"/docs/Python/Python pandas",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Python/python-pandas.md",tags:[{inline:!0,label:"Python",permalink:"/docs/tags/python"},{inline:!0,label:"pandas",permalink:"/docs/tags/pandas"}],version:"current",frontMatter:{author:"facsert",pubDatetime:"2024-02-21T20:34:43.000Z",title:"Python pandas",slug:"Python pandas",featured:!1,draft:!1,tags:["Python","pandas"],description:"Python pandas \u6a21\u5757"},sidebar:"tutorialSidebar",previous:{title:"Python openpyxl",permalink:"/docs/Python/Python openpyxl"},next:{title:"Python path",permalink:"/docs/Python/Python path"}},l={},c=[{value:"Table of Contents",id:"table-of-contents",level:2},{value:"\u4ecb\u7ecd",id:"\u4ecb\u7ecd",level:2},{value:"Series",id:"series",level:2},{value:"DataFrame",id:"dataframe",level:2},{value:"DataFrame \u53d6\u503c",id:"dataframe-\u53d6\u503c",level:3},{value:"DataFrame \u5206\u7ec4\u805a\u5408",id:"dataframe-\u5206\u7ec4\u805a\u5408",level:3}];function o(n){const e={br:"br",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,t.jsx)(e.h2,{id:"\u4ecb\u7ecd",children:"\u4ecb\u7ecd"}),"\n",(0,t.jsx)(e.p,{children:"pandas \u662f\u4e00\u4e2a\u7528\u4e8e\u5904\u7406\u8868\u683c\u578b\u6570\u636e\u7684 Python \u5e93, \u53ef\u4ee5\u8f7b\u677e\u5730\u5904\u7406\u5404\u79cd\u7ed3\u6784\u5316\u6570\u636e"}),"\n",(0,t.jsxs)(e.table,{children:[(0,t.jsx)(e.thead,{children:(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.th,{style:{textAlign:"center"},children:"\u7c7b\u578b"}),(0,t.jsx)(e.th,{style:{textAlign:"center"},children:"\u793a\u4f8b"}),(0,t.jsx)(e.th,{style:{textAlign:"center"},children:"\u542b\u4e49"})]})}),(0,t.jsxs)(e.tbody,{children:[(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{style:{textAlign:"center"},children:"Series"}),(0,t.jsx)(e.td,{style:{textAlign:"center"},children:(0,t.jsx)(e.code,{children:"s = pd.Series([1, 2, 3])"})}),(0,t.jsx)(e.td,{style:{textAlign:"center"},children:"\u4e00\u7ef4\u6570\u7ec4"})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{style:{textAlign:"center"},children:"DataFrame"}),(0,t.jsx)(e.td,{style:{textAlign:"center"},children:(0,t.jsx)(e.code,{children:"df = pd.DataFrame({'A': [1, 2, 3], 'B': [4, 5, 6]})"})}),(0,t.jsx)(e.td,{style:{textAlign:"center"},children:"\u4e8c\u7ef4\u6570\u7ec4"})]})]})]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-py",children:"import pandas as pd\n\n# \u6309\u5217\u521b\u5efa \npd.DataFrame({'A': [1, 2, 3], 'B': [4, 5, 6]})\n   A   B     \n0  1   4  \n1  2   5 \n2  3   6\n\n# \u6309\u884c\u521b\u5efa \npd.DataFrame([{'a': 1, 'b': 2}, {'a': 5, 'b': 10, 'c': 20}])\n   a   b     c\n0  1   2   NaN\n1  5  10  20.0\n"})}),"\n",(0,t.jsx)(e.h2,{id:"series",children:"Series"}),"\n",(0,t.jsx)(e.p,{children:"Series \u662f\u4e00\u7ef4\u6570\u7ec4, \u53ef\u4ee5\u7406\u89e3\u4e3a\u4e8c\u7ef4\u6570\u7ec4\u7684\u4e00\u5217\u6216 DataFrame \u53d6\u7684\u4e00\u884c"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-py",children:"# \u521b\u5efa Series \u6570\u636e, \u4e0d\u8bbe\u7f6e index, \u9ed8\u8ba4\u7d22\u5f15\u4ece 0 \u5f00\u59cb\npd.Series([\"1st\", \"2nd\", \"3rd\"])\n> 0    1st\n> 1    2nd\n> 2    3rd\n\n# \u521b\u5efa Series \u6570\u636e, \u5e76\u6307\u5b9a\u5217\u7d22\u5f15\npd.Series([\"1st\", \"2nd\", \"3rd\"], index=['a', 'b', 'c'])\n> a    1st\n> b    2nd\n> c    3rd\n\ns = pd.Series([\"1st\", \"2nd\", \"3rd\"], index=['a', 'b', 'c'])\n\n# \u6309\u5217\u7d22\u5f15\u53d6\u503c\ns['c'] / s.loc['c'] / s.iloc[2]\n> '3rd'\n\n# \u6309\u884c\u7d22\u5f15\u53d6\u7247\u6bb5\ns[:2] / s[['a', 'b']] / s.loc[['a', 'b']] /s.iloc[range(2)]\n> a    1st\n> b    2nd\n\n# Series \u91cd\u65b0\u8d4b\u503c/\u8ffd\u52a0\u503c\ns['d'] = '4th'\n\n# Series -> list \u8f6c\u5217\u8868\ns.tolist()\nlist(s.array) / list(s.values) / list(s)\n> ['1st', '2nd', '3rd']\n\n# Series \u6570\u636e\u64cd\u4f5c, \u5b57\u7b26\u4e32\u53e0\u52a0, \u6574\u6570\u8fd0\u7b97\ns + s\ns * 2\n> a    1st1st\n> b    2nd2nd\n> c    3rd3rd\n"})}),"\n",(0,t.jsx)(e.h2,{id:"dataframe",children:"DataFrame"}),"\n",(0,t.jsxs)(e.p,{children:["DataFrame \u8868\u793a\u4e00\u4e2a\u5927\u5c0f\u53ef\u53d8\u7684\u4e8c\u7ef4\u6570\u636e, \u7c7b\u4f3c\u4e8e\u4e00\u5f20\u8868",(0,t.jsx)(e.br,{}),"\n","DataFrame \u6709\u884c\u7d22\u5f15\u548c\u5217\u7d22\u5f15",(0,t.jsx)(e.br,{}),"\n","DataFrame \u53ef\u5bb9\u7eb3\u591a\u79cd\u6570\u636e\u7c7b\u578b",(0,t.jsx)(e.br,{}),"\n","DataFrame \u5141\u8bb8\u7f3a\u5931\u503c, \u63d0\u4f9b\u65b9\u6cd5\u5904\u7406\u7f3a\u5931\u503c"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-py",children:"data = [\n  {'name': 'A', 'age': '16', 'height': '1.75'}, \n  {'name': 'B', 'age': '17', 'height': '1.80'}, \n  {'name': 'C', 'age': '18', 'height': '1.85'}, \n  {'name': 'D', 'age': '19', 'height': '1.90'}\n]\n\n# index \u4f7f\u7528\u81ea\u5b9a\u4e49\u884c\u7d22\u5f15(\u9ed8\u8ba4\u884c\u7d22\u5f15\u662f 0 \u5f00\u59cb\u7684\u6574\u6570)\ndf = pd.DataFrame(data, index=['a', 'b', 'c', 'd'])\n>    name age height\n> a    A  16   1.75\n> b    B  17   1.80\n> c    C  18   1.85\n> d    D  19   1.90\n\n# DataFrame \u7684\u5217\u7d22\u5f15, list(df.columns) \u8f6c\u5217\u8868\ndf.columns\nIndex(['name', 'age', 'height'], dtype='object')\n\n# DataFrame \u7684\u884c\u7d22\u5f15 list(df.index) \u8f6c\u5217\u8868\ndf.index\nIndex(['a', 'b', 'c', 'd'], dtype='object')\n\n# DataFrame \u53d6\u503c numpy \u6570\u7ec4\ndf.values\narray([['A', '16', '1.75'],\n       ['B', '17', '1.80'],\n       ['C', '18', '1.85'],\n       ['D', '19', '1.90']], dtype=object)\n\n# DataFrame \u5f00\u5934\u548c\u7ed3\u5c3e\u5207\u7247 \ndf.head(3) / df.tail(3)\n\n# df.fillna(value) \u7f3a\u5931\u503c\u8d4b\u503c\ndf.fillna(0)\n\n# df.dropna() \u5220\u9664\u5305\u542b\u7f3a\u5931\u503c\u7684\u884c\ndf.dropna()\n"})}),"\n",(0,t.jsx)(e.h3,{id:"dataframe-\u53d6\u503c",children:"DataFrame \u53d6\u503c"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-py",children:"# DataFrame[column name] -> Serial \u83b7\u53d6\u4e00\u5217\u6570\u636e\ndf['name']\n> a    A\n> b    B\n> c    C\n> d    D\n\n# \u6309\u884c\u540d\u5b57\u53d6\u884c DataFrame.loc[row name] -> Serial \u83b7\u53d6\u4e00\u884c\u6570\u636e\n# \u6309\u884c\u5e8f\u53f7\u53bb\u884c DataFrame.iloc[row index] -> Serial \u83b7\u53d6\u4e00\u884c\u6570\u636e\ndf.loc['c']\ndf.iloc[2]\n> name         C\n> age         18\n> height    1.85\n> Name: c, dtype: object\n\n# DataFrame.iloc[[row index list]] -> DataFrame \u6309\u884c\u5e8f\u53f7\u53d6\u591a\u884c\ndf.iloc[range(3)]\n>    name age height\n> a    A  16   1.75\n> b    B  17   1.80\n> c    C  18   1.85\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-py",children:"# \u884c\u904d\u5386\nfor i, r in df.iterrows():\n    print(f\"{i}: {list(r)}\")\n\n> a: ['A', '16', '1.75']\n> b: ['B', '17', '1.80']\n> c: ['C', '18', '1.85']\n> d: ['D', '19', '1.90']\n\nfor i, r in df.iterrows():\n    print(f\"{i}: {dict(r)}\")\n\n> a: {'name': 'A', 'age': '16', 'height': '1.75'}\n> b: {'name': 'B', 'age': '17', 'height': '1.80'}\n> c: {'name': 'C', 'age': '18', 'height': '1.85'}\n> d: {'name': 'D', 'age': '19', 'height': '1.90'}\n\n# \u4fee\u6539\u5217\ndf['name'] = df['name'].apply(lambda x: \"pre_\" + x)\ndf['name'] = df['name'].transform(lambda x: \"pre_\" + x)\ndf['name'] = 'pre' + df['name']\n>     name age height\n> a  pre_A  16   1.75\n> b  pre_B  17   1.80\n> c  pre_C  18   1.85\n> d  pre_D  19   1.90\n\n# DataFrame \u5408\u5e76\ndf = pd.concat([df1, df2])\n\n# DataFrame \u8ffd\u52a0 Series \u884c\ndf.append(s, ignore_index=True)\n\n# \u63d2\u5165\u5217, \u63d2\u5165\u5e8f\u53f7, \u5217\u540d, \u53ef\u8fed\u4ee3\u6570\u636e\ndf.insert(index, 'name', iterable)\ndf.insert(3, \"count\", [3, 2, 5, 1])\n>    name age height  count\n> a    A  16   1.75      3\n> b    B  17   1.80      2\n> c    C  18   1.85      5\n> d    D  19   1.90      1\n\n# \u7ed3\u5c3e\u8ffd\u52a0\u5217, \u8be5\u5217\u7684\u503c\u5168\u4e3a 3\ndf['column'] = 3\n\n\n# \u5220\u9664\u5217, inplace=True \u4f1a\u76f4\u63a5\u4fee\u6539\u539f\u6570\u636e\ndf.drop(columns=['name'], inplace=True)\n>     name age height\n> a     A  16   1.75\n> b     B  17   1.80\n> c     C  18   1.85\n> d     D  19   1.90\n"})}),"\n",(0,t.jsx)(e.h3,{id:"dataframe-\u5206\u7ec4\u805a\u5408",children:"DataFrame \u5206\u7ec4\u805a\u5408"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-py",children:"# \u6392\u5e8f\ndf.sort_values(by=\"age\")\n  name age height\na    A  16   1.75\nb    B  17   1.80\nc    C  18   1.85\nd    D  19   1.90\n\ndf = pd.DataFrame({\n    'category': ['A', 'A', 'B', 'B', 'C', 'C'],\n    'value': [10, 20, 30, 40, 50, 60]\n})\n\n  category  value\n0        A     10\n1        A     20\n2        B     30\n3        B     40\n4        C     50\n5        C     60\n\nresult = df.groupby('category')['value'].agg(['max', 'min', 'mean'])\n          max  min  mean\ncategory\nA          20   10  15.0\nB          40   30  35.0\nC          60   50  55.0\n\n## \u5206\u7ec4\u805a\u5408\ndata = {\n    'name': ['\u5f20\u4e09', '\u5f20\u4e09', '\u674e\u56db', '\u674e\u56db', '\u738b\u4e94', '\u738b\u4e94'],\n    'address': ['\u5317\u4eac\u5e02', '\u5317\u4eac\u5e02', '\u4e0a\u6d77\u5e02', '\u4e0a\u6d77\u5e02', '\u5e7f\u5dde\u5e02', '\u5e7f\u5dde\u5e02'],\n    'age': [25, 25, 30, 32, 35, 35],\n    'height': [170, 175, 180, 185, 165, 170],\n    'date': ['2024-03-21', '2024-03-22', '2024-03-21', '2024-03-22', '2024-03-21', '2024-03-22']\n}\ndf = pd.DataFrame(data)\n# \u7b5b\u9009\u5206\u7ec4\u7684\u5217, \u6307\u5b9a\u5217\u6570\u636e\u64cd\u4f5c(max: \u6700\u5927\u503c, min: \u6700\u5c0f\u503c, mean: \u5e73\u5747\u503c, first: \u7b2c\u4e00\u4e2a\u503c)\ndf = df.groupby([\"name\", \"address\", \"age\"]).agg({\"height\": [\"max\", \"min\", \"mean\"], \"date\": \"first\"})\n                           height          date\n                        max  min   mean    first\nname address     age\n\u5f20\u4e09   \u5317\u4eac\u5e02     25     175  170  172.5  2024-03-21\n\u674e\u56db   \u4e0a\u6d77\u5e02     30     180  180  180.0  2024-03-21\n                 32     185  185  185.0  2024-03-22\n\u738b\u4e94   \u5e7f\u5dde\u5e02     35     170  165  167.5  2024-03-21\n\n# \u5206\u7ec4\u540e\u6307\u5b9a\u5217\u7d22\u5f15\u4f1a\u63d0\u5347\ndf.columns\nMultiIndex([('height',   'max'),\n            ('height',   'min'),\n            ('height',  'mean'),\n            (  'date', 'first')],\n           )\n\n# \u91cd\u65b0\u5b9a\u4e49\u5217\u7d22\u5f15\u540e\u6062\u590d\ndf.columns = [\"height_max\", \"height_min\", \"height_mean\", \"date\"]\ndf.reset_index(inplace=True)\n    name    address  age     height_max  height_min  height_mean  date\n0   \u5f20\u4e09     \u5317\u4eac\u5e02   25         175         170        172.5  2024-03-21\n1   \u674e\u56db     \u4e0a\u6d77\u5e02   30         180         180        180.0  2024-03-21\n2   \u674e\u56db     \u4e0a\u6d77\u5e02   32         185         185        185.0  2024-03-22\n3   \u738b\u4e94     \u5e7f\u5dde\u5e02   35         170         165        167.5  2024-03-21\n\n# agg \u53ef\u7528\u53c2\u6570\n# first/last \u6700\u521d\u975e None \u503c/\u6700\u540e\u4e00\u4e2a\u975e None \u503c\n# count/size \u7ec4\u4e2d\u975e None \u503c\u7684\u6570\u91cf/\u7ec4\u4e2d\u6570\u636e\u7684\u6570\u91cf(\u5305\u542b None \u503c)\n# sum \u8be5\u5206\u7ec4\u6240\u6709\u503c\u5f97\u603b\u548c\n# max/min/mean  \u6700\u5927\u503c/\u6700\u5c0f\u503c/\u5e73\u5747\u503c\n# std/var \u6807\u51c6\u5dee/\u65b9\u5dee\n# median/quantile  \u4e2d\u4f4d\u6570/\u5206\u4f4d\u6570\n"})})]})}function h(n={}){const{wrapper:e}={...(0,d.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(o,{...n})}):o(n)}},8453:(n,e,a)=>{a.d(e,{R:()=>s,x:()=>i});var t=a(6540);const d={},r=t.createContext(d);function s(n){const e=t.useContext(r);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function i(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(d):n.components||d:s(n.components),t.createElement(r.Provider,{value:e},n.children)}}}]);