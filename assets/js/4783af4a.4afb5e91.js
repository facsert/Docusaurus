"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[8415],{6997:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>d,toc:()=>i});var o=r(4848),t=r(8453);const s={author:"facsert",pubDatetime:new Date("2022-10-10T15:28:43.000Z"),title:"Docker Container",slug:"Docker Container",featured:!1,draft:!1,tags:["docker"],description:"Docker \u5bb9\u5668"},c=void 0,d={id:"Docker/docker-2-container",title:"Docker Container",description:"Docker \u5bb9\u5668",source:"@site/docs/Docker/docker-2-container.md",sourceDirName:"Docker",slug:"/Docker/Docker Container",permalink:"/docs/Docker/Docker Container",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Docker/docker-2-container.md",tags:[{inline:!0,label:"docker",permalink:"/docs/tags/docker"}],version:"current",frontMatter:{author:"facsert",pubDatetime:"2022-10-10T15:28:43.000Z",title:"Docker Container",slug:"Docker Container",featured:!1,draft:!1,tags:["docker"],description:"Docker \u5bb9\u5668"},sidebar:"tutorialSidebar",previous:{title:"Docker image",permalink:"/docs/Docker/Docker image"},next:{title:"Docker Network",permalink:"/docs/Docker/Docker Network"}},l={},i=[{value:"Table of Contents",id:"table-of-contents",level:2},{value:"\u5bb9\u5668\u5217\u8868",id:"\u5bb9\u5668\u5217\u8868",level:2},{value:"\u521b\u5efa\u5bb9\u5668",id:"\u521b\u5efa\u5bb9\u5668",level:2},{value:"docker-compose",id:"docker-compose",level:2}];function a(e){const n={br:"br",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,o.jsx)(n.h2,{id:"\u5bb9\u5668\u5217\u8868",children:"\u5bb9\u5668\u5217\u8868"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:' $ docker ps [OPTIONS]                                                         # \u663e\u793a\u5bb9\u5668\u5217\u8868\u53ca\u76f8\u5173\u4fe1\u606f\n\n $ docker ps\n $ docker ps -a, --all                                                         # \u663e\u793a\u6240\u6709\u5bb9\u5668, \u5305\u62ec\u672a\u8fd0\u884c\u7684\n $ docker ps -s, --size                                                        # \u663e\u793a\u6b63\u5728\u8fd0\u884c\u7684\u5bb9\u5668, \u663e\u793a\u5bb9\u5668\u5927\u5c0f\n $ docker ps -q, --quite                                                       # \u4ec5\u663e\u793a\u5bb9\u5668 ID\n\nCONTAINER ID   IMAGE         COMMAND                  CREATED        STATUS         PORTS                     NAMES      SIZE\n7eab1cd126af   43761bd5b76d  "docker-entrypoint.s\u2026"   43 hours ago   Up 43 hours    27017/tcp                 person     0B (virtual 700MB)\nee0c15a3a0ee   mongo         "docker-entrypoint.s\u2026"   44 hours ago   Up 44 hours    0.0.0.0:8589->27017/tcp   demo       0B (virtual 700MB)\n'})}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{style:{textAlign:"left"},children:(0,o.jsx)(n.code,{children:"CONTAINER ID"})}),(0,o.jsx)(n.th,{style:{textAlign:"left"},children:(0,o.jsx)(n.code,{children:"IMAGE"})}),(0,o.jsx)(n.th,{style:{textAlign:"left"},children:(0,o.jsx)(n.code,{children:"COMMAND"})}),(0,o.jsx)(n.th,{style:{textAlign:"left"},children:(0,o.jsx)(n.code,{children:"CREATED"})}),(0,o.jsx)(n.th,{style:{textAlign:"left"},children:(0,o.jsx)(n.code,{children:"STATUS"})}),(0,o.jsx)(n.th,{style:{textAlign:"left"},children:(0,o.jsx)(n.code,{children:"PORTS"})}),(0,o.jsx)(n.th,{style:{textAlign:"left"},children:(0,o.jsx)(n.code,{children:"NAMES"})}),(0,o.jsx)(n.th,{style:{textAlign:"left"},children:(0,o.jsx)(n.code,{children:"SIZE"})})]})}),(0,o.jsx)(n.tbody,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{style:{textAlign:"left"},children:"\u5bb9\u5668 ID"}),(0,o.jsx)(n.td,{style:{textAlign:"left"},children:"\u751f\u6210\u5bb9\u5668\u7684\u955c\u50cf"}),(0,o.jsx)(n.td,{style:{textAlign:"left"},children:"\u542f\u52a8\u5bb9\u5668\u65f6\u8fd0\u884c\u7684\u547d\u4ee4"}),(0,o.jsx)(n.td,{style:{textAlign:"left"},children:"\u5bb9\u5668\u521b\u5efa\u65f6\u95f4"}),(0,o.jsx)(n.td,{style:{textAlign:"left"},children:"\u5bb9\u5668\u72b6\u6001"}),(0,o.jsx)(n.td,{style:{textAlign:"left"},children:"\u673a\u5668\u7aef\u53e3->\u5bb9\u5668\u7aef\u53e3"}),(0,o.jsx)(n.td,{style:{textAlign:"left"},children:"\u5bb9\u5668\u540d\u79f0"}),(0,o.jsx)(n.td,{style:{textAlign:"left"},children:"\u5bb9\u5668\u5927\u5c0f"})]})})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:" $ docker stop    <CONTAINER ID | NAMES>                                       # \u5173\u95ed\u5bb9\u5668\n $ docker start   <CONTAINER ID | NAMES>                                       # \u542f\u52a8\u5bb9\u5668\n $ docker kill    <CONTAINER ID | NAMES>                                       # \u6740\u6b7b\u5bb9\u5668\u8fdb\u7a0b\n $ docker restart <CONTAINER ID | NAMES>                                       # \u91cd\u542f\u5bb9\u5668\n $ docker rm -f   <CONTAINER ID | NAMES>                                       # \u5f3a\u5236\u5220\u9664\u5bb9\u5668(\u8fd0\u884c\u4e2d\u7684\u5bb9\u5668\u4e5f\u4f1a\u5220\u9664)\n\n $ docker logs    <CONTAINER ID | NAMES>                                       # \u663e\u793a\u6307\u5b9a\u5bb9\u5668 log\n $ docker top     <CONTAINER ID | NAMES>                                       # \u5217\u51fa\u6307\u5b9a\u5bb9\u5668\u8fdb\u7a0b\n $ docker port    <CONTAINER ID | NAMES>                                       # \u663e\u793a\u5bb9\u5668\u7684\u7aef\u53e3\u6620\u5c04\n\n $ docker exec [OPTIONS] CONTAINER COMMAND [ARG...]                            # \u8fdb\u5165\u5bb9\u5668\u6267\u884c\u547d\u4ee4(\u5bb9\u5668\u5728\u8fd0\u884c\u72b6\u6001\u624d\u53ef\u8fdb\u5165)\n $ docker exec -it mongo-slave1 bash                                           # \u4ee5\u4ea4\u4e92\u5f0f\u8fdb\u5165 mongo-slave1 \u5bb9\u5668,\u6267\u884c bash, \u5e76\u7559\u5728\u5bb9\u5668\u4e2d(exit \u9000\u51fa\u5bb9\u5668)\n $ docker exec mongo-slave1 mongosh --version                                  # \u8fdb\u5165 mongo-slave1 \u5bb9\u5668\u67e5\u770b mongosh \u7248\u672c\u5e76\u9000\u51fa\n > 1.6.1\n"})}),"\n",(0,o.jsx)(n.h2,{id:"\u521b\u5efa\u5bb9\u5668",children:"\u521b\u5efa\u5bb9\u5668"}),"\n",(0,o.jsxs)(n.p,{children:["\u4f7f\u7528 ",(0,o.jsx)(n.code,{children:"docker run"})," \u547d\u4ee4\u521b\u5efa\u5bb9\u5668, \u4f7f\u7528\u4e0d\u901a\u53c2\u6570\u5c06\u5bb9\u5668\u5185\u7aef\u53e3\u6216\u8def\u5f84\u6620\u5c04\u5230\u4e3b\u673a(\u6620\u5c04\u90fd\u662f server",":docker"," \u7ed3\u6784)"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"Usage: docker run [OPTIONS] IMAGE [COMMAND] [ARG...]\n\nOptions:\n  -d, --detach                                                                 # \u540e\u53f0\u8fd0\u884c\u5bb9\u5668\uff0c\u5e76\u8f93\u51fa\u5bb9\u5668ID\n  -e, --env list                                                               # \u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\uff0c\u8be5\u53d8\u91cf\u53ef\u4ee5\u5728\u5bb9\u5668\u5185\u4f7f\u7528\n  -h, --hostname string                                                        # \u6307\u5b9a\u5bb9\u5668\u7684hostname\n  -i, --interactive                                                            # \u4ee5\u4ea4\u4e92\u6a21\u5f0f\u8fd0\u884c\u5bb9\u5668\uff0c\u901a\u5e38\u4e0e-t\u540c\u65f6\u4f7f\u7528\n  -l, --label list                                                             # \u7ed9\u5bb9\u5668\u6dfb\u52a0\u6807\u7b7e\n  --name <name>                                                                # \u8bbe\u7f6e\u5bb9\u5668\u540d\u79f0\uff0c\u5426\u5219\u4f1a\u81ea\u52a8\u547d\u540d\n  --network string                                                             # \u5c06\u5bb9\u5668\u52a0\u5165\u6307\u5b9a\u7f51\u7edc\n  -p, --publish list                                                           # \u8bbe\u7f6e\u5bb9\u5668\u6620\u5c04\u7aef\u53e3 <server port>:<docker port>\n  -P,--publish-all                                                             # \u5c06\u5bb9\u5668\u8bbe\u7f6e\u7684\u6240\u6709exposed\u7aef\u53e3\u8fdb\u884c\u968f\u673a\u6620\u5c04\n  --restart <restart option>                                                   # \u5bb9\u5668\u91cd\u542f\u7b56\u7565\uff0c\u9ed8\u8ba4\u4e3a\u4e0d\u91cd\u542f\n    on-failure[:max-retries]\uff1a                                                 # \u5728\u5bb9\u5668\u975e\u6b63\u5e38\u9000\u51fa\u65f6\u91cd\u542f\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u91cd\u542f\u6b21\u6570\u3002\n    unless-stopped\uff1a                                                           # \u603b\u662f\u91cd\u542f\uff0c\u9664\u975e\u4f7f\u7528stop\u505c\u6b62\u5bb9\u5668\n    always\uff1a                                                                   # \u603b\u662f\u91cd\u542f\n  --rm                                                                         # \u5bb9\u5668\u9000\u51fa\u65f6\u5219\u81ea\u52a8\u5220\u9664\u5bb9\u5668\n  -t, --tty                                                                    # \u5206\u914d\u4e00\u4e2a\u4f2a\u7ec8\u7aef\n  -u, --user <username>                                                        # \u8fd0\u884c\u7528\u6237\u6216\u8005UID\n  -v, --volume list                                                            # \u5bb9\u5668\u76ee\u5f55\u6620\u5c04\u5230\u4e3b\u673a\u76ee\u5f55 <server path>:<docker path>\n  -w, --workdir <work path>                                                    # \u5bb9\u5668\u7684\u5de5\u4f5c\u76ee\u5f55\n  --privileged                                                                 # \u7ed9\u5bb9\u5668\u7279\u6743\n"})}),"\n",(0,o.jsx)(n.p,{children:"\u5bb9\u5668\u548c\u4e3b\u673a\u73af\u5883\u662f\u9694\u79bb\u7684, docker \u63d0\u4f9b\u4e00\u4e9b\u65b9\u6cd5\u8fdb\u5165\u5bb9\u5668"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"\u5c06\u5bb9\u5668\u5185\u7aef\u53e3\u6620\u5c04\u5230\u4e3b\u673a\u7aef\u53e3, \u901a\u8fc7\u4e3b\u673a\u7aef\u53e3\u8fde\u63a5\u5bb9\u5668"}),"\n",(0,o.jsx)(n.li,{children:"\u5c06\u5bb9\u5668\u5185\u8def\u5f84\u6620\u5c04\u5230\u4e3b\u673a\u8def\u5f84, \u901a\u8fc7\u4fee\u6539\u4e3b\u673a\u6620\u5c04\u8def\u5f84\u6587\u4ef6\u540c\u6b65\u5230\u5bb9\u5668\u5185"}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"docker exec"})," \u547d\u4ee4\u8fdb\u5165\u5bb9\u5668"]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:' # \u4f7f\u7528 mongo \u955c\u50cf\u521b\u5efa demo \u5bb9\u5668, \u540e\u53f0\u8fd0\u884c, \u5bb9\u5668 27017 \u7aef\u53e3\u6620\u5c04\u673a\u5668 8589 \u7aef\u53e3\n $ docker run -d -p 8589:27017 --name demo mongo\n $ docker ps\n CONTAINER ID  IMAGE  COMMAND                 CREATED         STATUS         PORTS                     NAMES\n ee0c15a3a0ee  mongo  "docker-entrypoint.s\u2026"  13 seconds ago  Up 11 seconds  0.0.0.0:8589->27017/tcp   demo\n\n $ docker run -d \\                                                                   \n  -p 5432:5432 \\                                                               # \u7aef\u53e3\u6620\u5c04  server port:docker port\n  --name postgres \\                                                            # \u5bb9\u5668\u540d\u79f0\n  -e POSTGRES_PASSWORD=root \\                                                  # \u8bbe\u7f6e\u5bb9\u5668\u5185\u73af\u5883\u53d8\u91cf(\u6570\u636e\u5e93\u5bc6\u7801)\n  -e TZ=Asia/Shanghai \\                                                        # \u8bbe\u7f6e\u5bb9\u5668\u5185\u73af\u5883\u53d8\u91cf(\u6570\u636e\u5e93\u65f6\u533a)\n  -v /root/postgres:/var/lib/postgresql/data \\                                 # \u5bb9\u5668\u76ee\u5f55\u6620\u5c04\u5230\u4e3b\u673a\u8def\u5f84\n  postgres                                                                     # \u6307\u5b9a\u955c\u50cf\n\n # \u521b\u5efa\u5bb9\u5668(\u81ea\u52a8\u547d\u540d), \u521b\u5efa\u540e\u8fdb\u5165\u5bb9\u5668\u6267\u884c bash, \u9000\u51fa\u5bb9\u5668\u540e\u81ea\u52a8\u5220\u9664\u5bb9\u5668\n $ docker run -it --rm ubuntu bash\n'})}),"\n",(0,o.jsx)(n.h2,{id:"docker-compose",children:"docker-compose"}),"\n",(0,o.jsxs)(n.p,{children:["\u5728\u547d\u4ee4\u884c\u53ef\u4ee5\u901a\u8fc7 ",(0,o.jsx)(n.code,{children:"docker run"})," \u521b\u5efa\u5bb9\u5668, \u4e3a\u4e86\u66f4\u7b80\u5355\u66f4\u5feb\u521b\u5efa\u591a\u4e2a\u590d\u6742\u5bb9\u5668\u6709\u4e86 ",(0,o.jsx)(n.code,{children:"docker-compose"}),(0,o.jsx)(n.br,{}),"\n","\u521b\u5efa ",(0,o.jsx)(n.code,{children:"docker-compose.yml"})," \u5b9a\u4e49\u5bb9\u5668, \u7136\u540e\u4e00\u952e\u62c9\u8d77\u591a\u4e2a\u590d\u6742\u5bb9\u5668, \u4e14\u53ef\u4ee5\u91cd\u590d\u4f7f\u7528"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yml",children:"# docker compose v1.27 \u540e \u65e0\u9700 version \u5173\u952e\u5b57\nversion: '3'\n\nservices:\n  \n  # service \u540d\u79f0, docker compose \u4ee5 service \u540d\u79f0\u505a\u552f\u4e00\u6807\u8bc6\n  mongo:\n    image: mongo:latest\n    container_name: demo\n    ports:\n      - 8589:27017\n\n  postgres:\n    image: postgres:latest\n    container_name: postgres\n    restart: always\n    ports:\n      - 5432:5432\n    volumes:\n      - /root/postgres:/var/lib/postgresql/data\n    environment:\n      TZ: Asia/Shanghai\n      POSTGRES_PASSWORD: root\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:" # \u5728\u5f53\u524d\u8def\u5f84\u4e0b\u5bfb\u627e docker-compose.yml \u6587\u4ef6\u521b\u5efa\u5bb9\u5668\u5e76\u540e\u53f0\u6267\u884c\n $ dockrer compose up -d\n > [+] Running 1/2\n > \u2834 Network docker_default    Created                                                                       \n > \u2714 Container docker-redis-1  Started\n\n # \u6307\u5b9a docker compose \u6587\u4ef6\u521b\u5efa\u5bb9\u5668\n $ docker compose -f docker-compose.yml up -d\n \n # \u9ed8\u8ba4\u524d\u53f0\u6267\u884c, \u52a0 -d \u540e\u53f0. \u521b\u5efa\u5bb9\u5668\u670d\u52a1(\u5bb9\u5668\u4e0d\u5b58\u5728), \u542f\u52a8\u670d\u52a1(\u5bb9\u5668\u670d\u52a1\u672a\u8fd0\u884c), \u91cd\u542f\u670d\u52a1(\u5bb9\u5668\u670d\u52a1\u8fd0\u884c\u4e2d) \n $ docker compose up\n\n # \u542f\u52a8\u5df2\u5b58\u5728\u4e14\u505c\u6b62\u7684\u5bb9\u5668\u670d\u52a1(\u9ed8\u8ba4\u540e\u53f0\u6267\u884c), \u6dfb\u52a0 service \u540d\u79f0\u542f\u52a8\u6307\u5b9a service\n $ docker compose start [service]\n\n # \u542f\u52a8\u5df2\u5b58\u5728\u4e14\u505c\u6b62\u7684\u5bb9\u5668\u670d\u52a1(\u540e\u53f0\u6267\u884c)\n $ docker compose stop [service]\n\n # \u505c\u6b62\u5e76\u5220\u9664\u6307\u5b9a\u5bb9\u5668\u670d\u52a1(\u52a0 -v \u540c\u65f6\u5220\u9664\u6570\u636e\u5377)\n $ docker compose down redis\n > [+] Running 2/2\n > \u2714 Container docker-redis-1  Removed\n > \u2714 Network docker_default    Removed\n\n # \u8bfb\u53d6 docker-compose.yml \u6587\u4ef6, \u67e5\u770b\u914d\u7f6e\u4fe1\u606f\n $ docker compose config\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yml",children:"services:\n  backend:\n    image: example/database\n    volumes:\n      - db-data:/etc/data\n    networks:\n      - db-network\n\n  backup:\n    image: backup-service\n    volumes:\n      - db-data:/var/lib/backup/data\n    networks:\n      - db-network\n\n# \u8bbe\u7f6e\u5171\u4eab\u6570\u636e\u5377\u548c\u7f51\u7edc\nvolumes:\n  db-data:\nnetworks:\n  db-network:\n"})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>c,x:()=>d});var o=r(6540);const t={},s=o.createContext(t);function c(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);